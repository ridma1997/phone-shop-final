package gui;

import controller.BeforeLogout;
import db.Database;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.sql.Savepoint;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import model.GRN_Stock;
import model.MobSystem;
import model.Product;
import model.SupplierClass;
import model.Validation;

/**
 *
 * @author Ravinath Geethanjana
 */
public class GRN extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    private static GRN h;

    private GRN() {
        initComponents();
        this.setExtendedState(GRN.MAXIMIZED_BOTH);
        this.setDefaultCloseOperation(GRN.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                Home.getInstance(null, 0).setVisible(true);
                GRN.getInstance(null, 0).dispose();
            }

        });
        dateLabel.setText(null);
        timeLabel.setText(null);
        setImgToLbl();
        setSystemDateTime();
        copywriteDate.setText(null);
        setLogoToLogoutBtn("logout");
        setLogoToHomeBtn("Home3");
        setLogUserName();
        //updateBtn.setEnabled(false);
        genereateGrnID();
    }

    JFrame backWindow;
    int currentState;
    private Double qty, total, unitDiscount, totalDiscount, netTotal;
    private Savepoint sp;
    private String userNic, supplier, date, time;

    public static synchronized GRN getInstance(JFrame backWindow, int currentState) {
        if (h == null) {
            h = new GRN();
        }
        h.supIdTxf.grabFocus();
        h.qty = Double.parseDouble("0");
        h.total = Double.parseDouble("0");
        h.unitDiscount = Double.parseDouble("0");
        h.totalDiscount = Double.parseDouble("0");
        h.netTotal = Double.parseDouble("0");
        //h.unitDiscountRadioButton.setSelected(true);
        h.prNetTotalValueLabel.setText(null);
        //h.updateBtn.setEnabled(false);
        return h;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        footerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        copywriteDate = new javax.swing.JLabel();
        bodyPanel = new javax.swing.JPanel();
        mainBodyPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grnItemsTable = new javax.swing.JTable();
        totalDiscountLabel = new javax.swing.JLabel();
        totalAmntLabel = new javax.swing.JLabel();
        netTotalLabel = new javax.swing.JLabel();
        mainBtnPanel = new javax.swing.JPanel();
        deleteAllBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        calBtn = new javax.swing.JButton();
        removeQtyBtn = new javax.swing.JButton();
        deleteItemBtn = new javax.swing.JButton();
        addQtyBtn = new javax.swing.JButton();
        changeQtyBtn = new javax.swing.JButton();
        viewAllBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        supRegBtn = new javax.swing.JButton();
        grnIdValueLabel = new javax.swing.JLabel();
        supIdLabel = new javax.swing.JLabel();
        grnIdLabel = new javax.swing.JLabel();
        productsPanel = new javax.swing.JPanel();
        barcodeTxt = new javax.swing.JTextField();
        prBuyingPrcLabel = new javax.swing.JLabel();
        proNameTxt = new javax.swing.JTextField();
        qtyLabel = new javax.swing.JLabel();
        qtyTxf = new javax.swing.JTextField();
        prDiscountLbel = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        discountOptionComboBox = new javax.swing.JComboBox<>();
        prDiscountTxf = new javax.swing.JTextField();
        prNetTotalLabel = new javax.swing.JLabel();
        totalTxf = new javax.swing.JTextField();
        prBuyingPrcTxf1 = new javax.swing.JTextField();
        prNameLabel1 = new javax.swing.JLabel();
        prNameLabel = new javax.swing.JLabel();
        proIdTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        proCombo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        prNetTotalValueLabel = new javax.swing.JTextField();
        totalDiscountTxf = new javax.swing.JTextField();
        netTotalValueLabel = new javax.swing.JLabel();
        totalAmntValueLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        supplierCombo = new javax.swing.JComboBox<>();
        supIdTxf = new javax.swing.JTextField();
        mainHeadingPanel = new javax.swing.JPanel();
        addressPanel = new javax.swing.JPanel();
        imgLbl = new javax.swing.JLabel();
        shopNameLabel = new javax.swing.JLabel();
        dateLbl1 = new javax.swing.JLabel();
        headingPanel = new javax.swing.JPanel();
        headingLabel = new javax.swing.JLabel();
        currentTimePanel = new javax.swing.JPanel();
        dateLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JButton();
        homeBtn = new javax.swing.JButton();
        logUserPanel = new javax.swing.JPanel();
        logUserLabel = new javax.swing.JLabel();
        logUserValueLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1360, 760));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        footerPanel.setBackground(new java.awt.Color(102, 153, 255));
        footerPanel.setMaximumSize(new java.awt.Dimension(1360, 50));
        footerPanel.setMinimumSize(new java.awt.Dimension(1360, 50));
        footerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("| Designed and Developed by Pirates Developers  |(Under Construnction)");
        footerPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 5, -1, 20));

        copywriteDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        copywriteDate.setForeground(new java.awt.Color(255, 255, 255));
        copywriteDate.setText("2018");
        footerPanel.add(copywriteDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 40, 30));

        mainPanel.add(footerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 670, 1370, 40));

        mainBodyPanel.setBackground(new java.awt.Color(255, 255, 255));

        grnItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRO ID", "Product Name", "Barcode", "Qty", "Buying Price", "Unit Discount", "Discount", "Total", "Net Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(grnItemsTable);
        if (grnItemsTable.getColumnModel().getColumnCount() > 0) {
            grnItemsTable.getColumnModel().getColumn(0).setMinWidth(60);
            grnItemsTable.getColumnModel().getColumn(0).setPreferredWidth(60);
            grnItemsTable.getColumnModel().getColumn(0).setMaxWidth(60);
            grnItemsTable.getColumnModel().getColumn(3).setMinWidth(50);
            grnItemsTable.getColumnModel().getColumn(3).setPreferredWidth(50);
            grnItemsTable.getColumnModel().getColumn(3).setMaxWidth(70);
        }

        totalDiscountLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalDiscountLabel.setText("Total Discount :");

        totalAmntLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalAmntLabel.setText("Total Amount :");

        netTotalLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        netTotalLabel.setText("Net Total :");

        mainBtnPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        deleteAllBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteAllBtn.setForeground(new java.awt.Color(255, 0, 0));
        deleteAllBtn.setText("Delete All");
        deleteAllBtn.setFocusable(false);
        deleteAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllBtnActionPerformed(evt);
            }
        });
        mainBtnPanel.add(deleteAllBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, 150, 30));

        resetBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        resetBtn.setForeground(new java.awt.Color(0, 153, 204));
        resetBtn.setText("Reset Window");
        resetBtn.setFocusable(false);
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });
        mainBtnPanel.add(resetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 40, 160, 30));

        calBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        calBtn.setText("Cal");
        calBtn.setFocusable(false);
        mainBtnPanel.add(calBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 30, 70, 50));

        removeQtyBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        removeQtyBtn.setText("Remove Qty");
        removeQtyBtn.setFocusable(false);
        removeQtyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeQtyBtnActionPerformed(evt);
            }
        });
        mainBtnPanel.add(removeQtyBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 150, 30));

        deleteItemBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteItemBtn.setForeground(new java.awt.Color(255, 0, 0));
        deleteItemBtn.setText("Delete Item");
        deleteItemBtn.setFocusable(false);
        deleteItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemBtnActionPerformed(evt);
            }
        });
        mainBtnPanel.add(deleteItemBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 150, 30));

        addQtyBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addQtyBtn.setText("Add Qty");
        addQtyBtn.setFocusable(false);
        addQtyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addQtyBtnActionPerformed(evt);
            }
        });
        mainBtnPanel.add(addQtyBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 30));

        changeQtyBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        changeQtyBtn.setText("Change Qty");
        changeQtyBtn.setFocusable(false);
        changeQtyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeQtyBtnActionPerformed(evt);
            }
        });
        mainBtnPanel.add(changeQtyBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 150, 30));

        viewAllBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        viewAllBtn.setText("View All GRN");
        viewAllBtn.setFocusable(false);
        viewAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllBtnActionPerformed(evt);
            }
        });
        mainBtnPanel.add(viewAllBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 40, 160, 30));

        saveBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        saveBtn.setText("Save");
        saveBtn.setFocusable(false);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        mainBtnPanel.add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 20, 160, 30));

        supRegBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        supRegBtn.setText("Register New Supplier");
        supRegBtn.setFocusable(false);
        supRegBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supRegBtnActionPerformed(evt);
            }
        });

        grnIdValueLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        supIdLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        supIdLabel.setText("Supplier Name :");

        grnIdLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        grnIdLabel.setText("GRN ID :");

        productsPanel.setBackground(new java.awt.Color(255, 255, 255));
        productsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Products", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        productsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        barcodeTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        barcodeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodeTxtActionPerformed(evt);
            }
        });
        productsPanel.add(barcodeTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 240, 20));

        prBuyingPrcLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        prBuyingPrcLabel.setText("Buying Price :");
        productsPanel.add(prBuyingPrcLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, 20));

        proNameTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        proNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proNameTxtActionPerformed(evt);
            }
        });
        proNameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                proNameTxtKeyReleased(evt);
            }
        });
        productsPanel.add(proNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 240, -1));

        qtyLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        qtyLabel.setText("QTY :");
        productsPanel.add(qtyLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 40, 20));

        qtyTxf.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        qtyTxf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTxfActionPerformed(evt);
            }
        });
        qtyTxf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtyTxfKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtyTxfKeyTyped(evt);
            }
        });
        productsPanel.add(qtyTxf, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 240, -1));

        prDiscountLbel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        prDiscountLbel.setText("Unit Discount :");
        productsPanel.add(prDiscountLbel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, 20));

        totalLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalLabel.setText("Total :");
        productsPanel.add(totalLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 40));

        discountOptionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "%", "Rs" }));
        discountOptionComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                discountOptionComboBoxMouseClicked(evt);
            }
        });
        discountOptionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountOptionComboBoxActionPerformed(evt);
            }
        });
        productsPanel.add(discountOptionComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 210, -1, 20));

        prDiscountTxf.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        prDiscountTxf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prDiscountTxfActionPerformed(evt);
            }
        });
        prDiscountTxf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                prDiscountTxfKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prDiscountTxfKeyTyped(evt);
            }
        });
        productsPanel.add(prDiscountTxf, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 190, 20));

        prNetTotalLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        prNetTotalLabel.setText("Net Total :");
        productsPanel.add(prNetTotalLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, 20));

        totalTxf.setEditable(false);
        totalTxf.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalTxf.setForeground(new java.awt.Color(0, 0, 51));
        productsPanel.add(totalTxf, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 240, 40));

        prBuyingPrcTxf1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        prBuyingPrcTxf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prBuyingPrcTxf1ActionPerformed(evt);
            }
        });
        prBuyingPrcTxf1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prBuyingPrcTxf1KeyTyped(evt);
            }
        });
        productsPanel.add(prBuyingPrcTxf1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 240, 20));

        prNameLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        prNameLabel1.setText("Barcode :");
        productsPanel.add(prNameLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, 20));

        prNameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        prNameLabel.setText("PRO Name");
        productsPanel.add(prNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 20));

        proIdTxt.setEditable(false);
        proIdTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        productsPanel.add(proIdTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 60, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("ID");
        productsPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 20, 20));

        proCombo.setOpaque(false);
        proCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                proComboKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                proComboKeyTyped(evt);
            }
        });
        productsPanel.add(proCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 220, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        productsPanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 260, 70, -1));

        prNetTotalValueLabel.setEditable(false);
        prNetTotalValueLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        prNetTotalValueLabel.setForeground(new java.awt.Color(0, 51, 153));
        prNetTotalValueLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prNetTotalValueLabelActionPerformed(evt);
            }
        });
        productsPanel.add(prNetTotalValueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 250, 240, 40));

        totalDiscountTxf.setEditable(false);
        totalDiscountTxf.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalDiscountTxf.setForeground(new java.awt.Color(0, 0, 102));
        totalDiscountTxf.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalDiscountTxf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalDiscountTxfActionPerformed(evt);
            }
        });

        netTotalValueLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        netTotalValueLabel.setForeground(new java.awt.Color(0, 0, 153));
        netTotalValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        netTotalValueLabel.setText("1000.00");
        netTotalValueLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        totalAmntValueLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalAmntValueLabel.setForeground(new java.awt.Color(0, 0, 102));
        totalAmntValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        totalAmntValueLabel.setText("1000.00");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        supplierCombo.setOpaque(false);
        supplierCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supplierComboMouseClicked(evt);
            }
        });
        supplierCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierComboActionPerformed(evt);
            }
        });
        supplierCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                supplierComboKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                supplierComboKeyTyped(evt);
            }
        });
        jPanel1.add(supplierCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 180, -1));

        supIdTxf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        supIdTxf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supIdTxfActionPerformed(evt);
            }
        });
        supIdTxf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                supIdTxfKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                supIdTxfKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout mainBodyPanelLayout = new javax.swing.GroupLayout(mainBodyPanel);
        mainBodyPanel.setLayout(mainBodyPanelLayout);
        mainBodyPanelLayout.setHorizontalGroup(
            mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainBodyPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainBodyPanelLayout.createSequentialGroup()
                        .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(grnIdLabel)
                            .addComponent(supIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainBodyPanelLayout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(supRegBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainBodyPanelLayout.createSequentialGroup()
                                .addComponent(supIdTxf, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grnIdValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(productsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainBodyPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainBodyPanelLayout.createSequentialGroup()
                                .addComponent(netTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(netTotalValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainBodyPanelLayout.createSequentialGroup()
                                .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(totalDiscountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totalAmntLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(totalAmntValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totalDiscountTxf, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainBodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainBtnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        mainBodyPanelLayout.setVerticalGroup(
            mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainBodyPanelLayout.createSequentialGroup()
                .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainBodyPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(productsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainBodyPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(totalAmntLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(totalAmntValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalDiscountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalDiscountTxf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainBodyPanelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(netTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(netTotalValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mainBodyPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(grnIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grnIdValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(supIdTxf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainBodyPanelLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(mainBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(mainBodyPanelLayout.createSequentialGroup()
                                        .addComponent(supIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainBodyPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(supRegBtn)
                                .addGap(26, 26, 26)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addComponent(mainBtnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyPanelLayout.createSequentialGroup()
                .addComponent(mainBodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addComponent(mainBodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainPanel.add(bodyPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 670));

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1360, 710));

        mainHeadingPanel.setBackground(new java.awt.Color(153, 153, 255));
        mainHeadingPanel.setMaximumSize(new java.awt.Dimension(1360, 50));
        mainHeadingPanel.setMinimumSize(new java.awt.Dimension(1360, 50));
        mainHeadingPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addressPanel.setBackground(new java.awt.Color(153, 153, 255));

        shopNameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        shopNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        shopNameLabel.setText("Cell Corner Mobile Shop");

        dateLbl1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dateLbl1.setForeground(new java.awt.Color(255, 255, 255));
        dateLbl1.setText("No 255/b,Thalangama South,Battaramulla");

        javax.swing.GroupLayout addressPanelLayout = new javax.swing.GroupLayout(addressPanel);
        addressPanel.setLayout(addressPanelLayout);
        addressPanelLayout.setHorizontalGroup(
            addressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addressPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(imgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(addressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shopNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 30, Short.MAX_VALUE))
        );
        addressPanelLayout.setVerticalGroup(
            addressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addressPanelLayout.createSequentialGroup()
                .addComponent(shopNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateLbl1)
                .addGap(0, 11, Short.MAX_VALUE))
            .addGroup(addressPanelLayout.createSequentialGroup()
                .addComponent(imgLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainHeadingPanel.add(addressPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, -1));

        headingPanel.setBackground(new java.awt.Color(153, 153, 255));

        headingLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        headingLabel.setForeground(new java.awt.Color(255, 255, 255));
        headingLabel.setText("| GOOD RECIEVED NOTE |");

        javax.swing.GroupLayout headingPanelLayout = new javax.swing.GroupLayout(headingPanel);
        headingPanel.setLayout(headingPanelLayout);
        headingPanelLayout.setHorizontalGroup(
            headingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingLabel)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        headingPanelLayout.setVerticalGroup(
            headingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainHeadingPanel.add(headingPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 370, 50));

        currentTimePanel.setBackground(new java.awt.Color(153, 153, 255));

        dateLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(0, 0, 102));
        dateLabel.setText("2018.12.31");

        timeLabel.setFont(new java.awt.Font("DS-Digital", 1, 14)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(0, 0, 102));
        timeLabel.setText("10:26:45 AM");

        javax.swing.GroupLayout currentTimePanelLayout = new javax.swing.GroupLayout(currentTimePanel);
        currentTimePanel.setLayout(currentTimePanelLayout);
        currentTimePanelLayout.setHorizontalGroup(
            currentTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, currentTimePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(currentTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        currentTimePanelLayout.setVerticalGroup(
            currentTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentTimePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainHeadingPanel.add(currentTimePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 0, 140, 50));

        logoutBtn.setBorderPainted(false);
        logoutBtn.setContentAreaFilled(false);
        logoutBtn.setFocusPainted(false);
        logoutBtn.setFocusable(false);
        logoutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutBtnMouseExited(evt);
            }
        });
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });
        mainHeadingPanel.add(logoutBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 10, 30, 30));

        homeBtn.setBorderPainted(false);
        homeBtn.setContentAreaFilled(false);
        homeBtn.setFocusPainted(false);
        homeBtn.setFocusable(false);
        homeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                homeBtnMouseExited(evt);
            }
        });
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });
        mainHeadingPanel.add(homeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 10, 30, 30));

        logUserPanel.setBackground(new java.awt.Color(153, 153, 255));
        logUserPanel.setForeground(new java.awt.Color(0, 0, 102));

        logUserLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        logUserLabel.setForeground(new java.awt.Color(0, 0, 102));
        logUserLabel.setText("LOG USER :");

        logUserValueLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        logUserValueLabel.setForeground(new java.awt.Color(0, 0, 102));
        logUserValueLabel.setText("Ravinath Geethanjana");

        javax.swing.GroupLayout logUserPanelLayout = new javax.swing.GroupLayout(logUserPanel);
        logUserPanel.setLayout(logUserPanelLayout);
        logUserPanelLayout.setHorizontalGroup(
            logUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logUserPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logUserLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logUserValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        logUserPanelLayout.setVerticalGroup(
            logUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logUserPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logUserValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(logUserLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        mainHeadingPanel.add(logUserPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 0, 250, 50));

        getContentPane().add(mainHeadingPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 50));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        int i = JOptionPane.showConfirmDialog(this, "Are you Sure", "Warnig", JOptionPane.WARNING_MESSAGE);
        if (i == JOptionPane.YES_OPTION) {

            BeforeLogout b = BeforeLogout.getInstance();
            int x = b.checkSystemCurrentState();
            if (x == BeforeLogout.READY_TO_LOGOUT) {
                this.dispose();
                Home.getInstance(null, 0).dispose();
                new Thread() {
                    @Override
                    public void run() {
                        try {
                            Login.getInstance().setVisible(true);
                            ShutDownSystem.getInstance(1).setVisible(true);
                            Thread.sleep(1000);
                            DBConfiguration.getInstance().backupDb();
                            //System.exit(0);
                            DBConfiguration.getInstance().backupDb();
                            MobSystem.logoutSystem();

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }

                }.start();
                Login.getInstance().setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Cannot Logout", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void logoutBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBtnMouseEntered
        setLogoToLogoutBtn("logout1");
    }//GEN-LAST:event_logoutBtnMouseEntered

    private void logoutBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBtnMouseExited
        setLogoToLogoutBtn("logout");
    }//GEN-LAST:event_logoutBtnMouseExited

    private void homeBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMouseEntered
        setLogoToHomeBtn("Home1");
    }//GEN-LAST:event_homeBtnMouseEntered

    private void homeBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMouseExited
        setLogoToHomeBtn("Home3");
    }//GEN-LAST:event_homeBtnMouseExited

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        this.dispose();
        Home.getInstance(null, 0).setVisible(true);
    }//GEN-LAST:event_homeBtnActionPerformed

    private void supIdTxfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supIdTxfActionPerformed
        proNameTxt.grabFocus();
    }//GEN-LAST:event_supIdTxfActionPerformed

    private void totalDiscountTxfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalDiscountTxfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalDiscountTxfActionPerformed

    private void viewAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllBtnActionPerformed
        GRN_ViewAll v = GRN_ViewAll.getInstance(null, 0);
        v.setVisible(true);
    }//GEN-LAST:event_viewAllBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) grnItemsTable.getModel();
        dtm.setRowCount(0);
        clearForm();
        setTotal();
        supIdTxf.setText(null);
        supIdTxf.grabFocus();
    }//GEN-LAST:event_resetBtnActionPerformed

    private void deleteAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAllBtnActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) grnItemsTable.getModel();
        int cnfrm = JOptionPane.showConfirmDialog(this, "Do you really want to delete this", "Warnig", JOptionPane.YES_NO_OPTION);
        if (cnfrm == JOptionPane.YES_OPTION) {
            dtm.setRowCount(0);
            setTotal();
            clearForm();
        }
    }//GEN-LAST:event_deleteAllBtnActionPerformed

    private void deleteItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemBtnActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) grnItemsTable.getModel();
        try {
            int selectedRow = grnItemsTable.getSelectedRow();
            if (!(selectedRow < 0)) {
                int cnfrm = JOptionPane.showConfirmDialog(this, "Do you really want to delete this", "Warnig", JOptionPane.YES_NO_OPTION);
                if (cnfrm == JOptionPane.YES_OPTION) {
                    dtm.removeRow(selectedRow);
                    setTotal();
                    clearForm();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please Select a row from above table", "Waring", JOptionPane.WARNING_MESSAGE);
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Please Select a row from above table", "Waring", JOptionPane.WARNING_MESSAGE);
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Please Select a row from above table", "Waring", JOptionPane.WARNING_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteItemBtnActionPerformed

    private void supRegBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supRegBtnActionPerformed
        //Sup_Supplier s = Sup_Supplier.getInstance(null, 0);
        //s.setVisible(true);
    }//GEN-LAST:event_supRegBtnActionPerformed

    private void supIdTxfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_supIdTxfKeyReleased
        String val = supIdTxf.getText().trim();
        if (!val.isEmpty()) {
            String sql = "select * from supplier where (company_name like '%" + val + "%' or sup_id like '%" + val + "%') and status !='" + SupplierClass.DEACTIVE + "'";
            try {
                ResultSet rs = Database.search(sql);
                boolean b = false;
                supplierCombo.removeAllItems();
                while (rs.next()) {
                    supplierCombo.addItem(rs.getString("sup_id") + "-" + rs.getString("company_name"));
                    b = true;
                }
                if (b) {
                    supplierCombo.showPopup();
                } else {
                    supplierCombo.removeAllItems();
                    supplierCombo.hidePopup();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            supplierCombo.removeAllItems();
            supplierCombo.hidePopup();
        }
        if (evt.getKeyCode() == 40) {
            supplierCombo.grabFocus();
        }
    }//GEN-LAST:event_supIdTxfKeyReleased

    private void supIdTxfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_supIdTxfKeyTyped
        if (evt.getKeyCode() == 40) {
            supplierCombo.grabFocus();
        }
    }//GEN-LAST:event_supIdTxfKeyTyped

    private void supplierComboKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_supplierComboKeyReleased
        try {
            if (evt.getKeyCode() == 10) {
                String val = supplierCombo.getSelectedItem().toString();
                supIdTxf.setText(val);
                supIdTxf.grabFocus();
                supplierCombo.removeAllItems();
                supplierCombo.hidePopup();
            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_supplierComboKeyReleased

    private void supplierComboKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_supplierComboKeyTyped
        if (evt.getKeyCode() == 10) {
            String val = supplierCombo.getSelectedItem().toString();
            supIdTxf.setText(val);
            supIdTxf.grabFocus();
            supplierCombo.removeAllItems();
            supplierCombo.hidePopup();
        }
    }//GEN-LAST:event_supplierComboKeyTyped

    private void supplierComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierComboActionPerformed

    }//GEN-LAST:event_supplierComboActionPerformed

    private void supplierComboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplierComboMouseClicked
//        try {
//            String val = supplierCombo.getSelectedItem().toString();
//            System.out.println(val);
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//        String val = supplierCombo.getSelectedItem().toString();
//        supIdTxf.setText(val);
//        supIdTxf.grabFocus();
//        supplierCombo.removeAllItems();
//        supplierCombo.hidePopup();
    }//GEN-LAST:event_supplierComboMouseClicked

    private void proNameTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_proNameTxtKeyReleased
        String val = proNameTxt.getText().trim();
        if (!val.isEmpty()) {
            String sql = "select p.pro_id as pro_id, p.name as name, b.name as brand from product p inner join brand b on p.brand_id = b.brand_id where (p.name like '%" + val + "%' or p.pro_id like '%" + val + "%') and p.status !='" + Product.DEACTIVE + "'";
            try {
                ResultSet rs = Database.search(sql);
                boolean b = false;
                proCombo.removeAllItems();
                while (rs.next()) {
                    proCombo.addItem(rs.getString("pro_id") + "_" + rs.getString("name") + "-----" + rs.getString("brand"));
                    b = true;
                }
                if (b) {
                    proCombo.showPopup();
                } else {
                    proCombo.removeAllItems();
                    proCombo.hidePopup();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            proCombo.removeAllItems();
            proCombo.hidePopup();
        }
        if (evt.getKeyCode() == 40) {
            proCombo.grabFocus();
        }
    }//GEN-LAST:event_proNameTxtKeyReleased

    private void proComboKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_proComboKeyReleased
        try {
            if (evt.getKeyCode() == 10) {
                String val = proCombo.getSelectedItem().toString();
                proIdTxt.setText(val.split("_")[0]);
                proNameTxt.setText(val);
                proNameTxt.grabFocus();
                proCombo.removeAllItems();
                proCombo.hidePopup();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_proComboKeyReleased

    private void proComboKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_proComboKeyTyped
        if (evt.getKeyCode() == 10) {
            String val = proCombo.getSelectedItem().toString();
            proIdTxt.setText(val.split("_")[0]);
            proNameTxt.setText(val);
            proNameTxt.grabFocus();
            proCombo.removeAllItems();
            proCombo.hidePopup();
        }
    }//GEN-LAST:event_proComboKeyTyped

    private void proNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proNameTxtActionPerformed
        barcodeTxt.grabFocus();
    }//GEN-LAST:event_proNameTxtActionPerformed

    private void prBuyingPrcTxf1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prBuyingPrcTxf1KeyTyped
        Validation.numberVal(prBuyingPrcTxf1.getText().trim(), evt);
    }//GEN-LAST:event_prBuyingPrcTxf1KeyTyped

    private void barcodeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodeTxtActionPerformed
        prBuyingPrcTxf1.grabFocus();
    }//GEN-LAST:event_barcodeTxtActionPerformed

    private void prBuyingPrcTxf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prBuyingPrcTxf1ActionPerformed
        qtyTxf.grabFocus();
    }//GEN-LAST:event_prBuyingPrcTxf1ActionPerformed

    private void qtyTxfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyTxfKeyTyped
        Validation.numberVal(qtyTxf.getText().trim(), evt);
    }//GEN-LAST:event_qtyTxfKeyTyped

    private void qtyTxfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTxfActionPerformed
        prDiscountTxf.grabFocus();
    }//GEN-LAST:event_qtyTxfActionPerformed

    private void prDiscountTxfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prDiscountTxfKeyTyped
        Validation.numberVal(prDiscountTxf.getText().trim(), evt);
    }//GEN-LAST:event_prDiscountTxfKeyTyped

    private void prDiscountTxfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prDiscountTxfActionPerformed
        addDataToTable();
    }//GEN-LAST:event_prDiscountTxfActionPerformed

    private void qtyTxfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyTxfKeyReleased
        try {
            if (!qtyTxf.getText().trim().isEmpty()) {
                double qty = Double.parseDouble(qtyTxf.getText().trim());
                double unitPrice = Double.parseDouble(prBuyingPrcTxf1.getText().trim());
                totalTxf.setText(qty * unitPrice + "");
                prNetTotalValueLabel.setText(qty * unitPrice + "");
            } else {
                totalTxf.setText(prBuyingPrcTxf1.getText());
                prNetTotalValueLabel.setText(prBuyingPrcTxf1.getText());
            }

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_qtyTxfKeyReleased

    private void prDiscountTxfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prDiscountTxfKeyReleased
        calculateDiscount();
    }//GEN-LAST:event_prDiscountTxfKeyReleased

    private void discountOptionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountOptionComboBoxActionPerformed
        calculateDiscount();
    }//GEN-LAST:event_discountOptionComboBoxActionPerformed

    private void discountOptionComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_discountOptionComboBoxMouseClicked
        calculateDiscount();
    }//GEN-LAST:event_discountOptionComboBoxMouseClicked

    private void prNetTotalValueLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prNetTotalValueLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prNetTotalValueLabelActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addDataToTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addQtyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addQtyBtnActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) grnItemsTable.getModel();
        try {
            int selectedRow = grnItemsTable.getSelectedRow();
            if (selectedRow >= 0) {
                //System.out.println(selectedRow);
                String val = JOptionPane.showInputDialog(this, "Enter Amount");
                //System.out.println(val);
                if (val != null && !val.isEmpty()) {
                    double getQty = Double.parseDouble(val);
                    if (!(getQty < 0)) {
                        double newQty = Double.parseDouble(dtm.getValueAt(selectedRow, 3).toString()) + getQty;
                        dtm.setValueAt(newQty, selectedRow, 3);
                        refreshTable(newQty);
                    } else {
                        JOptionPane.showMessageDialog(this, "Invalid Number", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please select a row from table", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Please select a row from table", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Please select a row from table", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (java.lang.NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid Number", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_addQtyBtnActionPerformed

    private void changeQtyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeQtyBtnActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) grnItemsTable.getModel();
        try {
            int selectedRow = grnItemsTable.getSelectedRow();
            if (selectedRow >= 0) {
                //System.out.println(selectedRow);
                String val = JOptionPane.showInputDialog(this, "Enter Amount");
                //System.out.println(val);
                if (val != null && !val.isEmpty()) {
                    double getQty = Double.parseDouble(val);
                    if (!(getQty < 0)) {
                        double newQty = getQty;
                        dtm.setValueAt(newQty, selectedRow, 3);
                        refreshTable(newQty);
                    } else {
                        JOptionPane.showMessageDialog(this, "Invalid Number", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please select a row from table", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Please select a row from table", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Please select a row from table", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (java.lang.NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid Number", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_changeQtyBtnActionPerformed

    private void removeQtyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeQtyBtnActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) grnItemsTable.getModel();
        try {
            int selectedRow = grnItemsTable.getSelectedRow();
            if (selectedRow >= 0) {
                //System.out.println(selectedRow);
                String val = JOptionPane.showInputDialog(this, "Enter Amount");
                //System.out.println(val);
                if (val != null && !val.isEmpty()) {
                    double getQty = Double.parseDouble(val);
                    if (!(getQty < 0)) {
                        double newQty = Double.parseDouble(dtm.getValueAt(selectedRow, 3).toString()) - getQty;

                        if (getQty <= Double.parseDouble(dtm.getValueAt(selectedRow, 3).toString())) {
                            //System.out.println(getQty+" "+Double.parseDouble(dtm.getValueAt(selectedRow, 3).toString()));
                            if (getQty == Double.parseDouble(dtm.getValueAt(selectedRow, 3).toString())) {
                                //System.out.println("fcfjs");
                                int cnfrm = JOptionPane.showConfirmDialog(this, "Remove qty is equal to available qty \n Do you want to change the qty to 0 \n If yes this product will remove the table", "Warning", JOptionPane.YES_NO_OPTION);
                                if (cnfrm == JOptionPane.YES_OPTION) {
                                    dtm.setValueAt(newQty, selectedRow, 3);
                                    dtm.removeRow(selectedRow);
                                    setTotal();
                                }
                            } else {
                                dtm.setValueAt(newQty, selectedRow, 3);
                                refreshTable(newQty);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Remove qty is too large. There is no qty in table for this Product", "ERROR", JOptionPane.ERROR_MESSAGE);
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Invalid Number", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please select a row from table", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Please select a row from table", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Please select a row from table", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (java.lang.NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid Number", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_removeQtyBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) grnItemsTable.getModel();
        int rowCount = dtm.getRowCount();
        if (rowCount > 0) {
            userNic = MobSystem.getLogUser();
            supplier = supIdTxf.getText().split("-")[0];
            date = dateLabel.getText().trim();

            time = new SimpleDateFormat("HH:mm:ss").format(new Date());
            String subTtl = totalAmntValueLabel.getText().trim();
            String netTtl = netTotalValueLabel.getText().trim();
            String subDis = totalDiscountTxf.getText().trim();
            String status = model.GRN.PENDING + "";
            try {
                //sp = Database.getConnection().setSavepoint("EnterGrn");
                //Database.getConnection().setAutoCommit(false);
                int i = Database.iud("insert into grn (enter_date,total_amount,total_discount,time,status,emp_id,sup_id) values('" + date + "','" + subTtl + "','" + subDis + "','" + time + "','" + status + "','" + userNic + "','" + supplier + "')");
                if (i == 1) {
                    //Database.getConnection().commit();
                    //Database.getConnection().setAutoCommit(true);
                    ResultSet rs = Database.search("select grn_id from grn where status ='" + status + "' and enter_date = '" + date + "' and emp_id='" + userNic + "' and sup_id='" + supplier + "' and time = '" + time + "'");
                    String grnId = "";
                    if (rs.next()) {
                        grnId = rs.getString("grn_id");
                        //sp = Database.getConnection().setSavepoint("BeforeGRNStockEnter");
                        //Database.getConnection().setAutoCommit(false);
                        boolean b = false;
                        for (int j = 0; j < dtm.getRowCount(); j++) {
                            String pro = dtm.getValueAt(j, 0).toString();
                            String barcode = dtm.getValueAt(j, 2).toString();
                            String qt = dtm.getValueAt(j, 3).toString();
                            String bPrice = dtm.getValueAt(j, 4).toString();
                            String uDis = dtm.getValueAt(j, 5).toString();
                            String totDis = dtm.getValueAt(j, 6).toString();
                            String sql = "insert into grn_stock (qty,get_unit_price,unit_discount,total_discount,barcode,status,product_pro_id,grn_id) ";
                            sql += " values('" + qt + "','" + bPrice + "','" + uDis + "','" + totDis + "','" + barcode + "','" + GRN_Stock.IN_STOCK + "','" + pro + "','" + grnId + "')";
                            int x = Database.iud(sql);
                            if (x == 1) {
                                b = true;
//                                ResultSet search = Database.search("select max(grn_stock_id) as max from grn_stock");
//                                String grnStockId = "";
//                                if (search.next()) {
//                                    grnStockId = search.getString("max");
//                                    String query = "insert into product_stock (in_date,time,qty,barcode,pro_id,grn_stock_id) ";
//                                    query += " values('" + date + "','" + time + "','" + qt + "','" + barcode + "','" + pro + "','" + grnStockId + "')";
//                                    Database.iud(query);
//                                    
//                                } else {
//                                    b = false;
//                                    break;
//                                    //JOptionPane.showMessageDialog(this, "Cannot find GRN-Stock ID", "ERROR", JOptionPane.ERROR_MESSAGE);
//                                }
                            } else {
                                // Database.getConnection().rollback(sp);
                                //Database.getConnection().setAutoCommit(true);
                                JOptionPane.showMessageDialog(this, "GRN stock Faliure", "ERROR", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        if (!b) {
                            //Database.getConnection().rollback(sp);
                            //Database.getConnection().setAutoCommit(true);
                            JOptionPane.showMessageDialog(this, "Cannot find GRN-Stock ID", "ERROR", JOptionPane.ERROR_MESSAGE);
                        } else {
                            //Database.getConnection().commit();
                            //Database.getConnection().setAutoCommit(true);
                            dtm.setRowCount(0);
                            clearForm();
                            setTotal();
                            supIdTxf.setText(null);
                            supIdTxf.grabFocus();
                            genereateGrnID();
                            JOptionPane.showMessageDialog(this, "Succuss...!", "Alert", JOptionPane.INFORMATION_MESSAGE);
                        }
                        //JOptionPane.showMessageDialog(this, "Succuss", "Alert", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Cannot find GRN ID", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Submit Faliure", "ERROR", JOptionPane.ERROR_MESSAGE);
                    //Database.getConnection().rollback(sp);
                    //Database.getConnection().setAutoCommit(true);
                }
            } catch (Exception e) {
                try {
                    Database.getConnection().rollback(sp);
                    Database.getConnection().setAutoCommit(true);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Enter Data to Table", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GRN.getInstance(null, 0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addQtyBtn;
    private javax.swing.JPanel addressPanel;
    private javax.swing.JTextField barcodeTxt;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton calBtn;
    private javax.swing.JButton changeQtyBtn;
    private javax.swing.JLabel copywriteDate;
    private javax.swing.JPanel currentTimePanel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel dateLbl1;
    private javax.swing.JButton deleteAllBtn;
    private javax.swing.JButton deleteItemBtn;
    private javax.swing.JComboBox<String> discountOptionComboBox;
    private javax.swing.JPanel footerPanel;
    private javax.swing.JLabel grnIdLabel;
    private javax.swing.JLabel grnIdValueLabel;
    private javax.swing.JTable grnItemsTable;
    private javax.swing.JLabel headingLabel;
    private javax.swing.JPanel headingPanel;
    private javax.swing.JButton homeBtn;
    private javax.swing.JLabel imgLbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logUserLabel;
    private javax.swing.JPanel logUserPanel;
    private javax.swing.JLabel logUserValueLabel;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JPanel mainBodyPanel;
    private javax.swing.JPanel mainBtnPanel;
    private javax.swing.JPanel mainHeadingPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel netTotalLabel;
    private javax.swing.JLabel netTotalValueLabel;
    private javax.swing.JLabel prBuyingPrcLabel;
    private javax.swing.JTextField prBuyingPrcTxf1;
    private javax.swing.JLabel prDiscountLbel;
    private javax.swing.JTextField prDiscountTxf;
    private javax.swing.JLabel prNameLabel;
    private javax.swing.JLabel prNameLabel1;
    private javax.swing.JLabel prNetTotalLabel;
    private javax.swing.JTextField prNetTotalValueLabel;
    private javax.swing.JComboBox<String> proCombo;
    private javax.swing.JTextField proIdTxt;
    private javax.swing.JTextField proNameTxt;
    private javax.swing.JPanel productsPanel;
    private javax.swing.JLabel qtyLabel;
    private javax.swing.JTextField qtyTxf;
    private javax.swing.JButton removeQtyBtn;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel shopNameLabel;
    private javax.swing.JLabel supIdLabel;
    private javax.swing.JTextField supIdTxf;
    private javax.swing.JButton supRegBtn;
    private javax.swing.JComboBox<String> supplierCombo;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel totalAmntLabel;
    private javax.swing.JLabel totalAmntValueLabel;
    private javax.swing.JLabel totalDiscountLabel;
    private javax.swing.JTextField totalDiscountTxf;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JTextField totalTxf;
    private javax.swing.JButton viewAllBtn;
    // End of variables declaration//GEN-END:variables

    private void setImgToLbl() {
        try {
            Image i = new ImageIcon(getClass().getResource("/Resources/icon.png")).getImage().getScaledInstance(imgLbl.getWidth(), imgLbl.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(i);
            imgLbl.setIcon(icon);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setSystemDateTime() {
        Timer t = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                Date d1 = new Date();
                Date d2 = new Date();
                Date d3 = new Date();
                SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                SimpleDateFormat sdf2 = new SimpleDateFormat("hh:mm:ss a");
                SimpleDateFormat sdf3 = new SimpleDateFormat("yyyy");
                String f1 = sdf1.format(d1);
                String f2 = sdf2.format(d2);
                String f3 = sdf3.format(d3);
                dateLabel.setText(f1);
                timeLabel.setText(f2);
                copywriteDate.setText(f3);
            }
        });
        t.start();
    }

    private void setLogoToLogoutBtn(String s) {
        try {
            Image i = new ImageIcon(getClass().getResource("/Resources/" + s + ".png")).getImage().getScaledInstance(logoutBtn.getWidth(), logoutBtn.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(i);
            logoutBtn.setIcon(icon);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setLogoToHomeBtn(String s) {
        try {
            Image i = new ImageIcon(getClass().getResource("/Resources/" + s + ".png")).getImage().getScaledInstance(homeBtn.getWidth(), homeBtn.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(i);
            homeBtn.setIcon(icon);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setLogUserName() {
        try {
            logUserValueLabel.setText("Ravinath Perera");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void getSelectedRow() {

    }

    private void genereateGrnID() {
        try {
            ResultSet rs = Database.search("select max(grn_id) as x from grn");
            if (rs.next()) {
                int count = rs.getInt("x");
                count++;
                grnIdValueLabel.setText("00" + count);
            }
            // grnDateChooser.grabFocus();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void calculateDiscount() {
        try {
            String discountType = "";
            String disOpt = discountOptionComboBox.getSelectedItem().toString();
            double ttl = Double.parseDouble(totalTxf.getText().trim());
            if (prDiscountTxf.getText().trim().isEmpty()) {
                this.unitDiscount = Double.parseDouble("0");
                this.totalDiscount = Double.parseDouble("0");
                this.total = ttl;
                this.totalDiscount = unitDiscount * qty;
                this.netTotal = ttl - totalDiscount;
                prNetTotalValueLabel.setText(netTotal + "");
            } else {

                double dis = Double.parseDouble(prDiscountTxf.getText().trim());
                double byPrice = Double.parseDouble(prBuyingPrcTxf1.getText().trim());
                this.qty = Double.parseDouble(qtyTxf.getText().trim());
                String ntTtl = "";
                this.total = ttl;
                if (disOpt.equals("%")) {
                    this.unitDiscount = (byPrice / 100) * dis;
                } else {
                    this.unitDiscount = dis;
                }
                this.totalDiscount = unitDiscount * qty;
                this.netTotal = ttl - totalDiscount;
                prNetTotalValueLabel.setText(netTotal + "");
            }
        } catch (Exception e) {

        }
    }

    private void clearForm() {
        proNameTxt.setText(null);
        proIdTxt.setText(null);
        prBuyingPrcTxf1.setText(null);
        barcodeTxt.setText(null);
        qtyTxf.setText(null);
        totalTxf.setText(null);
        prDiscountTxf.setText(null);
        prNetTotalValueLabel.setText(null);
        this.qty = Double.parseDouble("0");
        this.total = Double.parseDouble("0");
        this.unitDiscount = Double.parseDouble("0");
        this.totalDiscount = Double.parseDouble("0");
        this.netTotal = Double.parseDouble("0");
        proNameTxt.grabFocus();
    }

    private void addDataToTable() {
        try {
            if (!proNameTxt.getText().trim().isEmpty()) {

                String name = proNameTxt.getText().trim().split("_")[1].split("-----")[0].trim();
                System.out.println(name);
                String id = proIdTxt.getText().trim();
                String byPrice = prBuyingPrcTxf1.getText().trim();
                String code = barcodeTxt.getText().trim();
                String barCode = "None";
                String qt = qtyTxf.getText().trim();
                String sup = supIdTxf.getText().trim();
                this.qty = Double.parseDouble(qt);
                boolean disState = true;
                String val = prDiscountTxf.getText().trim();
                if (val.isEmpty()) {
                    val = "0";
                }
                double vvvv = Double.parseDouble(val);;
                if (discountOptionComboBox.getSelectedItem().toString().equals("%")) {
                    if (vvvv >= 100) {
                        disState = false;
                    }
                } else {
                    if (vvvv >= Double.parseDouble(byPrice)) {
                        disState = false;
                    }
                }
                if (disState) {
                    ResultSet rs1 = Database.search("select * from product where name = '" + name + "' and pro_id='" + id + "'");
                    if (rs1.next()) {
                        DefaultTableModel dtm = (DefaultTableModel) grnItemsTable.getModel();
                        if (!sup.isEmpty()) {
                            ResultSet rs2 = Database.search("select * from supplier where sup_id='" + sup.split("-")[0] + "'");
                            if (rs2.next()) {
                                if (!(name.isEmpty() || id.isEmpty() || byPrice.isEmpty() || qt.isEmpty())) {
                                    if (Double.parseDouble(qt) != 0) {

                                        calculateDiscount();
                                        if (!code.isEmpty()) {
                                            barCode = code;
                                        }
                                        int rowCount = dtm.getRowCount();
                                        if (!(rowCount == 0)) {
                                            boolean b = true;
                                            for (int i = 0; i < rowCount; i++) {
                                                //System.out.println("Construction");
                                                String checkID = dtm.getValueAt(i, 0).toString();
                                                if (checkID.equals(id)) {
                                                    b = false;
                                                    int checkup = JOptionPane.showConfirmDialog(this, "This Product is Already added to the table. Do yo want to use previous barcode,unit discount and buying price? \n If yes this item added with previous barcode,unit discount and buying price. \n If not this item will not add to the table and you can remove the current row of table and try again \n or use Add QTY,Remove QTY or Change QTY Buttons.", "Confirmation", JOptionPane.YES_NO_OPTION);
                                                    System.out.println(checkup == JOptionPane.YES_OPTION);
                                                    if (checkup == JOptionPane.YES_OPTION) {
                                                        System.out.println("abc123");
                                                        String avbQty = dtm.getValueAt(i, 3).toString();
                                                        String avbByPrice = dtm.getValueAt(i, 4).toString();
                                                        String avbUnitDiscount = dtm.getValueAt(i, 5).toString();
                                                        String avbDiscount = dtm.getValueAt(i, 6).toString();
                                                        String avbTotal = dtm.getValueAt(i, 7).toString();
                                                        String avbNetTotal = dtm.getValueAt(i, 8).toString();

                                                        double quantity = Double.parseDouble(avbQty) + Double.parseDouble(qtyTxf.getText().trim());
                                                        double uDis = Double.parseDouble(avbUnitDiscount);
                                                        double totDis = uDis * quantity;
                                                        double sbTtl = Double.parseDouble(avbByPrice) * quantity;
                                                        double ntTtl = sbTtl - totDis;

                                                        dtm.setValueAt(quantity, i, 3);
                                                        dtm.setValueAt(totDis, i, 6);
                                                        dtm.setValueAt(sbTtl, i, 7);
                                                        dtm.setValueAt(ntTtl, i, 8);
                                                        setTotal();
                                                        clearForm();
                                                        break;
                                                    } else {
                                                        JOptionPane.showMessageDialog(this, "Product is not added to the table.", "Alert", JOptionPane.INFORMATION_MESSAGE);
                                                        break;
                                                    }

                                                }
                                            }
                                            if (b && (Double.parseDouble(byPrice) != 0)) {
                                                Vector v = new Vector();
                                                v.add(id);
                                                v.add(name);
                                                v.add(barCode);
                                                v.add(this.qty + "");
                                                v.add(byPrice);
                                                v.add(this.unitDiscount + "");
                                                v.add(this.totalDiscount + "");
                                                v.add(this.total + "");
                                                v.add(this.netTotal + "");
                                                dtm.addRow(v);
                                                setTotal();
                                                clearForm();
                                            }
                                        } else if (Double.parseDouble(byPrice) != 0) {
                                            Vector v = new Vector();
                                            v.add(id);
                                            v.add(name);
                                            v.add(barCode);
                                            v.add(this.qty + "");
                                            v.add(byPrice);
                                            v.add(this.unitDiscount + "");
                                            v.add(this.totalDiscount + "");
                                            v.add(this.total + "");
                                            v.add(this.netTotal + "");
                                            dtm.addRow(v);
                                            setTotal();
                                            clearForm();
                                        } else {
                                            JOptionPane.showMessageDialog(this, "Buying Price is 0, Cannot add this product", "ERROR", JOptionPane.ERROR_MESSAGE);
                                        }

                                    } else {
                                        JOptionPane.showMessageDialog(this, "QTY is 0, Cannot add this product", "ERROR", JOptionPane.ERROR_MESSAGE);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "These Fields are Required \n PRO Name,ID,Buying Price,QTY", "ERROR", JOptionPane.ERROR_MESSAGE);
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "This Supplier is not exixt in the System", "ERROR", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Supplier Details are Required \nPlease Fill the Supplier Name", "ERROR", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "This Product is not exixt in the System", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Discount is too large", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "These Fields are Required \n PRO Name,ID,Buying Price,QTY", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Invalid Product name or Supplier Name", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (java.lang.NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "QTY is empty", "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void setTotal() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) grnItemsTable.getModel();
            double ntTtl = 0;
            double sbTtl = 0;
            double subDiscount = 0;
            int rowCount = dtm.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                String dis = dtm.getValueAt(i, 6).toString();
                subDiscount += Double.parseDouble(dis);
                String subTtt = dtm.getValueAt(i, 7).toString();
                sbTtl += Double.parseDouble(subTtt);
                String ttl = dtm.getValueAt(i, 8).toString();
                ntTtl += Double.parseDouble(ttl);
            }
            totalAmntValueLabel.setText(sbTtl + "");
            netTotalValueLabel.setText(ntTtl + "");
            totalDiscountTxf.setText(subDiscount + "");
        } catch (Exception e) {
        }
    }

    private void refreshTable(double newQty) throws Exception {
        DefaultTableModel dtm = (DefaultTableModel) grnItemsTable.getModel();
        int selectedRow = grnItemsTable.getSelectedRow();
        double bPrice = Double.parseDouble(dtm.getValueAt(selectedRow, 4).toString());
        double unitDis = Double.parseDouble(dtm.getValueAt(selectedRow, 5).toString());
        double ttl = bPrice * newQty;
        double subDis = unitDis * newQty;
        double netTtl = ttl - subDis;

        dtm.setValueAt(ttl, selectedRow, 7);
        dtm.setValueAt(subDis, selectedRow, 6);
        dtm.setValueAt(netTtl, selectedRow, 8);
        setTotal();
        JOptionPane.showMessageDialog(this, "Succuss", "Alert", JOptionPane.INFORMATION_MESSAGE);
    }

    public void enableUpdateBtn() {
        // updateBtn.setEnabled(true);
        saveBtn.setEnabled(false);
    }
}
